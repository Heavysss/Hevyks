Использование Linter
	          PyPip

-----------	Int - целочисленное число (5,10,20,11,22,33,102)
Типы данных       	Float - дробное число (1.5, 2.3, 3.6, 107.3)
-----------         	str - строка (любой текст)
-----------	bool - состояние (True or False(Буллевы значения можно использовать в переменных))

If - если, 
elif - тогда,  ----------- Управляющие структуры
else - значит

Пример управления(Если написанно if == 5 и далее if == 6 то программа будет считать и 1-ое и 2-ое . Если написать if == 5 и elif == 6 то при достижении значения на if == 5 будет верен и исполнение второй операции выполнятся не будет)

Множественные условия - это когда нужно задавать в условие один или более переменных (Пример: if Abec == 5 and(or) Abec == 5
(And -  выполняется первое условие И  второе))
(Or -  первое ИЛИ второе)
Not - оператор Not дает понимание того что если условие не выполенено то(Булево значение будет True) результатом будет выполнение всего того блока условия тоесть(if not Abec > 5)(Abec = 4)

Input - вводимые символы от пользователя которые переходят в тип данных строка

''' - Перевод текста на строки (print('''1
				2
				3''')
Таблца приоритетностей (см. рабочий стол)

\n - переход на следующую строку (Ещё не пользовался и не научился)

Пример экранирования - print("Здравствуй \"друг\"")

Пример конкатенации - (Это превращение типов данных к одному, тоесть)
a = 20 (является цельным числом а не строковым)
print("Тебе лет больше " +str(a) +" лет ?")

Некоторые правила:

Переменные - начинается только с букв (запрещенны: спецсимволы, цифры).
В переменных допущен такой вид:
a3123fdsfsd_vfdf эта переменная без синтаксической ошибки 

# - Этот знак нужно ставить перед написанием что-бы прокоментировать момент в коде

Совмещать типы данных нельзя, только конвертировать один в другой

int,float,str - Будут преобразовывать итоговый вариант в свой тип данных (Пример: print(int("1" + "1")) В этом случаем будет идти прибавление строки 1 к строке 1 и будет 11 а итоговый результат будет конвертирован в целочисленное значение если это возможно)

Сравнивание значений:

Равно - (Пример: print(1 == 1)(Результат может быть либо True либо False в этом случае результат будет True))
Не равно - (Пример: print(1 != 1)(Результатот будет false так как значение слева равно 1 но если поменять 1-слева на 2 то будет True так как 2 не равняется 1 ))
Больше либо меньше - (Пример: print(10 > 11)(Результатом будет False так как 10 не больше 11))

Лексиграфическое сравнение - Сравнивает ВЕС текста(Пример: Area------Ares)(В этом случае вес второго слова будет больше так как все буквы имеют свой вес относительно алфавита тоесть буква s будет иметь больше вес чем а))
Каждый символ имеет свой вес, но также важна и позиция его в слове.
Например, tesa и tase имеют разный вес, хотя состоят из одних и тех же символов.
(Пример написания ЛГ сравнения: print("Sal" > "Sale")(Результатом этой операции будет false так как слово Sal будет весить меньше слова Sale))

Математические операции:

(--) - Унарный минус( изменение состояния числа) Пример: 
a = -5 (Переменная a имеет в себе отрицательное цельно число)
a = -5 (При выведении на экран этой переменной получится положительно значение)

(%) - Деление по модулю (Вычисляет остаток от деления) Пример: 10%3=1 (так как 10 / 3 	будет 9 а остаток 1)

(//) - Частное число Пример: 20//6 = 3 (6 используется 3 раза) 

(**) - возведение в степень 5**2 = 25

(==) - Равняется  (Пример: if a == '5':)(Не нужно путать знак присваивания = со знаков равно ==)

Умножение строк (Пример: print("Здравствуй " * 3(Указывать только целочисленное значение))

+=
-= 
и т.д
Нужно что бы без лишнего произвести над переменной какую либо операцию (Пример: a = 30, a += 15(Тоесть значение переменной а на следующем этапе будет 45))

